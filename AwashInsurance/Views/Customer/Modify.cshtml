 @model List<AwashInsurance.Models.Customer>

@{
    var selected = ViewBag.SelectedCustomer as AwashInsurance.Models.Customer;
}
 @using Newtonsoft.Json
@{
    ViewData["Title"] = "Update Customer";
    Layout = "~/Views/Shared/_CustomLayout.cshtml";
}


<style>
    .highlighted-row {
        background-color: #d1e7dd; /* Light green, change as needed */
    }
</style>



<div class="form-container">
    <!-- Form Header -->
    <div class="form-header">
        <h2 class="form-title">Update Customer</h2>
    </div>

    @if (TempData["Success"] != null)
    {
        <div style="color: green; background-color: #d4edda; padding: 10px; border-radius: 4px; margin-bottom: 10px;">
            @TempData["Success"]
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div style="color: red; background-color: #f8d7da; padding: 10px; border-radius: 4px; margin-bottom: 10px;">
            @TempData["Error"]
        </div>
    }


    <!-- Navigation Links -->
    <div class="action-buttons">
        <a href="/Customer/Add" class="action-btn active">Register</a>
        <a href="/Customer/Modify" class="action-btn">Update</a>
        <a href="/Customer/Delete" class="action-btn">Remove</a>
        <a href="/Customer/Inquire" class="action-btn">View</a>
    </div>

    <!-- Update Form -->
    <div class="form-body">
        <form class="form-main" asp-action="Modify" method="get">
            <!-- Search Section -->
            <fieldset class="form-section">
                <legend class="section-header">
                    <span class="section-number">1</span>
                    <h3 class="section-title">Find Customer</h3>
                </legend>

                <div class="form-grid">
                    <div class="form-group">
                        <form method="get" asp-action="SearchUser">
                            <input type="hidden" name="searchBy" value="CustomerId" />
                            <label class="form-label">Customer ID</label>
                            <div class="input-group">
                                <input type="text" name="searchValue" class="form-input" placeholder="Enter customer ID">
                                <button type="submit" class="input-button search-button">
                                    <span class="button-icon">🔍</span> Search
                                </button>
                            </div>
                        </form>
                    </div>

                    <div class="form-group">
                        <form method="get" asp-action="SearchUser">
                            <input type="hidden" name="searchBy" value="CustomerName" />
                            <label class="form-label">Customer Name</label>
                            <div class="input-group">
                                <input type="text" name="searchValue" class="form-input" placeholder="Enter customer name">
                                <button type="submit" class="input-button search-button">
                                    <span class="button-icon">🔍</span> Search
                                </button>
                            </div>
                        </form>
                    </div>
                </div>


                <!--  radio section that populates searched value -->
                <div class="form-group full-width">
                    <div class="search-results">
                        <form asp-action="SelectCustomer" method="post">
                            <table class="results-table">
                                <thead>
                                    <tr>
                                        <th>Select</th>
                                        <th>Customer ID</th>
                                        <th>Customer Name</th>
                                        <th>Phone</th>
                                        <th>Status</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model != null && Model.Any())
                                    {
                                        foreach (var customer in Model)
                                        {
                                            <tr>
                                                <td onclick="highlightRow(this.parentElement)">
                                                    <input type="radio" name="selectedCustomerId" value="@customer.CustomerId"
                                                           onclick="event.stopPropagation(); this.form.submit();" />
                                                </td>
                                                <td>@customer.CustomerId</td>
                                                <td>@customer.FullName</td>
                                                <td>@customer.Phone</td>
                                                <td>@customer.Email</td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </form>

        
                        @if (!Model.Any())
                        {
                            <p></p>
                        }

                    </div>
                </div>
            </fieldset>



            <!-- Update Form (shown after selection) -->
            @if (selected != null)
            {
                <form asp-action="Modify" method="post">
                    <fieldset class="form-section" id="modifyFormSection">
                        <legend class="section-header">
                            <span class="section-number">2</span>
                            <h3 class="section-title">Update Customer Details</h3>
                        </legend>

                        <div class="form-grid">
                            <div class="form-group">
                                <label class="form-label">Customer ID</label>
                                <input type="text" class="form-input" name="CustomerId" value="@selected.CustomerId" readonly>
                            </div>
                            <div class="form-group">
                                <label class="form-label">Full Name</label>
                                <input type="text" class="form-input" name="FullName" value="@selected.FullName" required>
                            </div>
                            <div class="form-group">
                                <label class="form-label">Date of Birth</label>
                                <input type="date" class="form-input" name="DateOfBirth" value="@selected.DateOfBirth.ToString("yyyy-MM-dd")">
                            </div>
                            <div class="form-group">
                                <label class="form-label">Gender</label>
                                <select class="form-input" name="Gender">
                                    <option value="Male" selected="@(selected.Gender == "Male")">Male</option>
                                    <option value="Female" selected="@(selected.Gender == "Female")">Female</option>
                                    <option value="Other" selected="@(selected.Gender == "Other")">Other</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label class="form-label">ID Type</label>
                                <input type="text" class="form-input" name="IDType" value="@selected.IDType">
                            </div>
                            <div class="form-group">
                                <label class="form-label">Email</label>
                                <input type="email" class="form-input" name="Email" value="@selected.Email">
                            </div>
                            <div class="form-group">
                                <label class="form-label">Phone</label>
                                <input type="tel" class="form-input" name="Phone" value="@selected.Phone">
                            </div>
                            <div class="form-group">
                                <label class="form-label">Address</label>
                                <input type="text" class="form-input" name="Address" value="@selected.Address">
                            </div>
                            <div class="form-group">
                                <label class="form-label">City</label>
                                <input type="text" class="form-input" name="City" value="@selected.City">
                            </div>
                            <div class="form-group">
                                <label class="form-label">Customer Type</label>
                                <select class="form-input" name="CustomerType">
                                    <option value="Individual" selected="@(selected.CustomerType == "Individual")">Individual</option>
                                    <option value="Corporate" selected="@(selected.CustomerType == "Corporate")">Corporate</option>
                                    <option value="VIP" selected="@(selected.CustomerType == "VIP")">VIP</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label class="form-label">Newsletter Subscription</label>
                                <input type="checkbox" class="form-checkbox" name="IsSubscribedToNewsletter" checked="@selected.IsSubscribedToNewsletter">
                            </div>
                            <div class="form-group">
                                <label class="form-label">Registration Date</label>
                                <input type="date" class="form-input" name="RegistrationDate" value="@selected.RegistrationDate.ToString("yyyy-MM-dd")" readonly>
                            </div>
                        </div>

                        <div class="form-group full-width">
                            <label class="form-label">Update Notes</label>
                            <textarea rows="3" class="form-textarea" name="Notes">@selected.Notes</textarea>
                        </div>

                        <div class="form-actions">
                            <button type="reset" class="form-button secondary-button">
                                <span class="button-icon">↻</span> Reset
                            </button>

                            <button type="submit" class="form-button primary-button" id="btnSaveUpdates">
                                <span class="button-icon">✓</span> Save Updates
                            </button>
                        </div>
                    </fieldset>
                </form>
            }

        </form>
    </div>
</div>

<!-- Include shared CSS -->
<link href="~/css/pagestyle.css" rel="stylesheet" />

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Focus first input field
        const firstInput = document.querySelector('.form-input');
        if (firstInput) firstInput.focus();

        // Add animation to form sections when they come into view
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.opacity = 1;
                    entry.target.style.transform = 'translateY(0)';
                }
            });
        }, { threshold: 0.1 });

        document.querySelectorAll('.form-section').forEach(section => {
            section.style.opacity = 0;
            section.style.transform = 'translateY(20px)';
            section.style.transition = 'all 0.4s ease-out';
            observer.observe(section);
        });

        // Reset form
        document.querySelector('.secondary-button').addEventListener('click', function() {
            const form = this.closest('form');
            if (form) {
                form.reset();
                updateFormSection.style.display = 'none';
                saveUpdatesBtn.disabled = true;
                document.querySelectorAll('input[type="radio"]').forEach(radio => {
                    radio.checked = false;
                });
            }
        });
    });
</script>

<script>
    const customers = @Html.Raw(JsonConvert.SerializeObject(Model));
    console.log("Fetched Customers:", selected);
</script>

<script>
    function highlightRow(row) {
        const rows = document.querySelectorAll(".results-table tbody tr");
        rows.forEach(r => r.classList.remove("highlighted-row"));
        row.classList.add("highlighted-row");
    }
</script>

@* @section Scripts {
    <script>
        setTimeout(function () {
            document.querySelectorAll('[style*="background-color"]').forEach(el => {
                el.style.display = 'none';
            });
        }, 4000); // Hide after 4 seconds
    </script>
} *@

