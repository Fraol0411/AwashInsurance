public IActionResult Modify(string? customerId, string? customerName)
{
    var customers = _context.Customers.AsQueryable();

    if (!string.IsNullOrEmpty(customerId))
    {
        customers = customers.Where(c => c.CustomerId.Contains(customerId));
    }

    if (!string.IsNullOrEmpty(customerName))
    {
        customers = customers.Where(c => c.FullName.Contains(customerName));
    }

    var result = customers.ToList();

    return View(result);
}




@* <!-- Section 1: Account Details --> *@
@* <fieldset class="form-section"> *@
@*     <legend class="section-header"> *@
@*         <span class="section-number">1</span> *@
@*         <h3 class="section-title">User Account Details</h3> *@
@*     </legend> *@

@*     <div class="form-grid"> *@
@*         <!-- Login ID --> *@
@*         <div class="form-group"> *@
@*             <label class="form-label">Login ID</label> *@
@*             <input asp-for="LoginId" type="text" class="form-input" required /> *@
@*             <span asp-validation-for="LoginId" class="text-danger"></span> *@
@*         </div> *@

@*         <!-- Password --> *@
@*         <div class="form-group"> *@
@*             <label class="form-label">Password</label> *@
@*             <input asp-for="Password" type="password" class="form-input" required /> *@
@*             <span asp-validation-for="Password" class="text-danger"></span> *@
@*         </div> *@

@*         <!-- Role Selection --> *@
@*         <div class="form-group"> *@
@*             <label class="form-label">Role</label> *@
@*             <select asp-for="RoleId" class="form-select" asp-items="ViewBag.Roles"> *@
@*                 <option value="">-- Select Role --</option> *@
@*             </select> *@
@*             <span asp-validation-for="RoleId" class="text-danger"></span> *@
@*         </div> *@

@*         <!-- Is Active --> *@
@*         <div class="form-group checkbox-group"> *@
@*             <label class="form-label">Active</label> *@
@*             <label class="checkbox-label"> *@
@*                 <input asp-for="IsActive" type="checkbox" class="form-checkbox" /> *@
@*                 <span class="checkmark"></span> *@
@*             </label> *@
@*         </div> *@

@*         <!-- Created At (optional display only) --> *@
@*         <div class="form-group"> *@
@*             <label class="form-label">Created At</label> *@
@*             <input asp-for="CreatedAt" type="date" class="form-input" readonly /> *@
@*         </div> *@
@*     </div> *@
@* </fieldset> *@

@* <!-- Section 2: Employee Selection --> *@
@* <fieldset class="form-section"> *@
@*     <legend class="section-header"> *@
@*         <span class="section-number">2</span> *@
@*         <h3 class="section-title">Employee Link</h3> *@
@*     </legend> *@

@*     <div class="form-grid"> *@
@*         <!-- Search or Select Employee --> *@
@*         <div class="form-group"> *@
@*             <label class="form-label">Employee</label> *@
@*             <select asp-for="EmployeeId" class="form-select" asp-items="ViewBag.Employees"> *@
@*                 <option value="">-- Select Employee --</option> *@
@*             </select> *@
@*             <span asp-validation-for="EmployeeId" class="text-danger"></span> *@
@*         </div> *@

@*         <!-- Display Employee Full Name (optional) --> *@
@*         <div class="form-group"> *@
@*             <label class="form-label">Employee Name</label> *@
@*             <input type="text" value="@(Model != null ? Model.EmployeeName : "")" class="form-input" readonly /> *@

@*         </div> *@
@*     </div> *@
@* </fieldset> *@












  // the conmplete inclusgin hashing --

        //[HttpPost]
        //[ValidateAntiForgeryToken]
        //public async Task<IActionResult>
    Add(AddUserAccountViewModel model)
    //{
    //    try
    //    {
    //        if (!ModelState.IsValid)
    //        {
    //            model.Roles = new SelectList(_context.Roles.ToList(), "Id", "Name");
    //            TempData["Error"] = "Please correct the form errors";
    //            return View(model);
    //        }

    //        // Check if login ID already exists
    //        if (_context.UserAccounts.Any(u => u.LoginId == model.LoginId))
    //        {
    //            ModelState.AddModelError("LoginId", "This username is already taken");
    //            model.Roles = new SelectList(_context.Roles.ToList(), "Id", "Name");
    //            return View(model);
    //        }

    //        var userAccount = new UserAccount
    //        {
    //            LoginId = model.LoginId,
    //            Password = BCrypt.Net.BCrypt.HashPassword(model.Password), // Secure hashing
    //            EmployeeId = model.EmployeeId,
    //            RoleId = model.RoleId,
    //            CreatedAt = DateTime.UtcNow,
    //            IsActive = true
    //        };

    //        _context.UserAccounts.Add(userAccount);
    //        await _context.SaveChangesAsync();

    //        TempData["Success"] = "User account created successfully!";
    //        return RedirectToAction(nameof(Add));
    //    }
    //    catch (Exception ex)
    //    {
    //        _logger.LogError(ex, "Error creating user account");
    //        model.Roles = new SelectList(_context.Roles.ToList(), "Id", "Name");
    //        TempData["Error"] = "An error occurred while creating the account";
    //        return View(model);
    //    }
    //}
