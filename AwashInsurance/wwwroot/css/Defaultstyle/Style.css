/* From Uiverse.io by Satwinder04 */
/* Input container */
.input-container {
    position: relative;
    margin: 20px;
}

/* Input field */
.input-field {
    display: block;
    width: 100%;
    padding: 10px;
    font-size: 16px;
    border: none;
    border-bottom: 2px solid #ccc;
    outline: none;
    background-color: transparent;
}

/* Input label */
.input-label {
    position: absolute;
    top: 0;
    left: 0;
    font-size: 16px;
    color: rgba(204, 204, 204, 0);
    pointer-events: none;
    transition: all 0.3s ease;
}

/* Input highlight */
.input-highlight {
    position: absolute;
    bottom: 0;
    left: 0;
    height: 2px;
    width: 0;
    background-color: #007bff;
    transition: all 0.3s ease;
}

/* Input field:focus styles */
.input-field:focus + .input-label {
    top: -20px;
    font-size: 12px;
    color: #007bff;
}

    .input-field:focus + .input-label + .input-highlight {
        width: 100%;
    }

/*inputtype1*/


/* From Uiverse.io by Maximinodotpy */
.inputGroup {
    font-family: 'Segoe UI', sans-serif;
    margin: 1em 0 1em 0;
    max-width: 190px;
    position: relative;
}

    .inputGroup input {
        font-size: 100%;
        padding: 0.8em;
        outline: none;
        border: 2px solid rgb(200, 200, 200);
        background-color: transparent;
        border-radius: 20px;
        width: 100%;
    }

    .inputGroup label {
        font-size: 100%;
        position: absolute;
        left: 0;
        padding: 0.8em;
        margin-left: 0.5em;
        pointer-events: none;
        transition: all 0.3s ease;
        color: rgb(100, 100, 100);
    }

    .inputGroup :is(input:focus, input:valid) ~ label {
        transform: translateY(-50%) scale(.9);
        margin: 0em;
        margin-left: 1.3em;
        padding: 0.4em;
        background-color: #e8e8e8;
    }

    .inputGroup :is(input:focus, input:valid) {
        border-color: rgb(150, 150, 200);
    }

    /*inputtype2*/


.form {
    --input-bg: #FFf;
    /*  background of input */
    --padding: 1.5em;
    --rotate: 80deg;
    /*  rotation degree of input*/
    --gap: 2em;
    /*  gap of items in input */
    --icon-change-color: #15A986;
    /*  when rotating changed icon color */
    --height: 40px;
    /*  height */
    width: 200px;
    padding-inline-end: 1em;
    /*  change this for padding in the end of input */
    background: var(--input-bg);
    position: relative;
    border-radius: 4px;
}

    .form label {
        display: flex;
        align-items: center;
        width: 100%;
        height: var(--height);
    }

    .form input {
        width: 100%;
        padding-inline-start: calc(var(--padding) + var(--gap));
        outline: none;
        background: none;
        border: 0;
    }
    /* style for both icons -- search,close */
    .form svg {
        /* display: block; */
        color: #111;
        transition: 0.3s cubic-bezier(.4,0,.2,1);
        position: absolute;
        height: 15px;
    }
/* search icon */
.icon {
    position: absolute;
    left: var(--padding);
    transition: 0.3s cubic-bezier(.4,0,.2,1);
    display: flex;
    justify-content: center;
    align-items: center;
}
/* arrow-icon*/
.swap-off {
    transform: rotate(-80deg);
    opacity: 0;
    visibility: hidden;
}
/* close button */
.close-btn {
    /* removing default bg of button */
    background: none;
    border: none;
    right: calc(var(--padding) - var(--gap));
    box-sizing: border-box;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #111;
    padding: 0.1em;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    transition: 0.3s;
    opacity: 0;
    transform: scale(0);
    visibility: hidden;
}

.form input:focus ~ .icon {
    transform: rotate(var(--rotate)) scale(1.3);
}

    .form input:focus ~ .icon .swap-off {
        opacity: 1;
        transform: rotate(-80deg);
        visibility: visible;
        color: var(--icon-change-color);
    }

    .form input:focus ~ .icon .swap-on {
        opacity: 0;
        visibility: visible;
    }

.form input:valid ~ .icon {
    transform: scale(1.3) rotate(var(--rotate))
}

    .form input:valid ~ .icon .swap-off {
        opacity: 1;
        visibility: visible;
        color: var(--icon-change-color);
    }

    .form input:valid ~ .icon .swap-on {
        opacity: 0;
        visibility: visible;
    }

.form input:valid ~ .close-btn {
    opacity: 1;
    visibility: visible;
    transform: scale(1);
    transition: 0s;
}
/*inputtype3*/



/* rectangle loader */
.loader {
    --color: #a5a5b0;
    --size: 70px;
    width: var(--size);
    height: var(--size);
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 5px;
}

    .loader span {
        width: 100%;
        height: 100%;
        background-color: var(--color);
        animation: keyframes-blink 0.6s alternate infinite linear;
    }

        .loader span:nth-child(1) {
            animation-delay: 0ms;
        }

        .loader span:nth-child(2) {
            animation-delay: 200ms;
        }

        .loader span:nth-child(3) {
            animation-delay: 300ms;
        }

        .loader span:nth-child(4) {
            animation-delay: 400ms;
        }

        .loader span:nth-child(5) {
            animation-delay: 500ms;
        }

        .loader span:nth-child(6) {
            animation-delay: 600ms;
        }

@keyframes keyframes-blink {
    0% {
        opacity: 0.3;
        transform: scale(0.5) rotate(5deg);
    }

    50% {
        opacity: 1;
        transform: scale(1);
    }
}


/* buttons */
/* From Uiverse.io by reshades */
.button {
    background-color: #ffffff00;
    color: #fff;
    width: 8.5em;
    height: 2.9em;
    border: #3654ff 0.2em solid;
    border-radius: 11px;
    text-align: right;
    transition: all 0.6s ease;
}

    .button:hover {
        background-color: #3654ff;
        cursor: pointer;
    }

    .button svg {
        width: 1.6em;
        margin: -0.2em 0.8em 1em;
        position: absolute;
        display: flex;
        transition: all 0.6s ease;
    }

    .button:hover svg {
        transform: translateX(5px);
    }

.text {
    margin: 0 1.5em
}


/* radio button */

/* From Uiverse.io by Yaya12085 */

.radio-input {
    display: flex;
    flex-direction: row;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    font-size: 16px;
    font-weight: 600;
    color: white;
    width:300px;
}

    .radio-input input[type="radio"] {
        display: none;

    }

    .radio-input label {
        display: flex;
        align-items: center;
        padding: 10px;
        border: 1px solid #ccc;
        background-color: #212121;
        border-radius: 5px;
        margin-right: 12px;
        cursor: pointer;
        position: relative;
        transition: all 0.3s ease-in-out;
    }

        .radio-input label:before {
            content: "";
            display: block;
            position: absolute;
            top: 50%;
            left: 0;
            transform: translate(-50%, -50%);
            width: 10px;
            height: 10px;
            border-radius: 50%;
            background-color: #fff;
            border: 2px solid #ccc;
            transition: all 0.3s ease-in-out;
        }

    .radio-input input[type="radio"]:checked + label:before {
        background-color: green;
        top: 0;
    }

    .radio-input input[type="radio"]:checked + label {
        background-color: royalblue;
        color: #fff;
        border-color: rgb(129, 235, 129);
        animation: radio-translate 0.5s ease-in-out;
    }

@keyframes radio-translate {
    0% {
        transform: translateX(0);
    }

    50% {
        transform: translateY(-10px);
    }

    100% {
        transform: translateX(0);
    }
}
